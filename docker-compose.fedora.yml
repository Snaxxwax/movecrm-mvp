version: '3.8'

# Fedora/SELinux-safe version without problematic volume mounts

services:
  postgres:
    image: postgres:15-alpine
    container_name: movecrm-postgres
    environment:
      POSTGRES_DB: movecrm
      POSTGRES_USER: movecrm
      POSTGRES_PASSWORD: movecrm_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - movecrm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U movecrm -d movecrm"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: movecrm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - movecrm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend without volume mount - build everything into image
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: movecrm-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://movecrm:movecrm_password@postgres:5432/movecrm
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key
      - PYTHONUNBUFFERED=1
    # No volume mount - files are in the image
    networks:
      - movecrm-network
    command: ["python", "src/main.py"]

  # Simple Python container for YOLOE mock
  yoloe-mock:
    image: python:3.11-slim
    container_name: movecrm-yoloe-mock
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - movecrm-network
    # Create the mock service inline
    command: >
      sh -c "
        pip install --no-cache-dir fastapi uvicorn python-multipart &&
        cat > /app/main.py << 'EOF'
      from fastapi import FastAPI, HTTPException
      from fastapi.responses import JSONResponse
      import random
      
      app = FastAPI(title='YOLOE Mock Service')
      
      @app.get('/health')
      async def health():
          return {'status': 'healthy', 'service': 'yoloe-mock'}
      
      @app.post('/detect')
      async def detect():
          items = ['sofa', 'table', 'chair', 'box', 'refrigerator']
          return {
              'status': 'success',
              'detections': [
                  {'item': random.choice(items), 'confidence': round(random.random(), 2)}
                  for _ in range(random.randint(3, 8))
              ]
          }
      
      @app.get('/stats')
      async def stats():
          return {'service': 'yoloe-mock', 'mode': 'mock', 'status': 'operational'}
      
      if __name__ == '__main__':
          import uvicorn
          uvicorn.run(app, host='0.0.0.0', port=8001)
      EOF
        cd /app && python main.py
      "

  # Simple nginx without config mount
  widget-cdn:
    image: nginx:alpine
    container_name: movecrm-widget-cdn
    ports:
      - "8080:80"
    networks:
      - movecrm-network
    # Create content inline
    command: >
      sh -c "
        cat > /usr/share/nginx/html/index.html << 'EOF'
      <!DOCTYPE html>
      <html>
      <head>
          <title>MoveCRM Widget CDN</title>
          <style>
              body { 
                  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                  display: flex;
                  justify-content: center;
                  align-items: center;
                  height: 100vh;
                  margin: 0;
                  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              }
              .container {
                  background: white;
                  padding: 3rem;
                  border-radius: 12px;
                  box-shadow: 0 20px 40px rgba(0,0,0,0.1);
                  text-align: center;
              }
              h1 { color: #333; margin-bottom: 1rem; }
              p { color: #666; }
              .status { 
                  display: inline-block;
                  padding: 0.5rem 1rem;
                  background: #10b981;
                  color: white;
                  border-radius: 6px;
                  margin-top: 1rem;
              }
          </style>
      </head>
      <body>
          <div class='container'>
              <h1>ðŸš€ MoveCRM Widget CDN</h1>
              <p>Widget CDN is operational and ready to serve content</p>
              <div class='status'>âœ“ Working</div>
          </div>
      </body>
      </html>
      EOF
        nginx -g 'daemon off;'
      "

  minio:
    image: minio/minio:latest
    container_name: movecrm-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - movecrm-network

  adminer:
    image: adminer:latest
    container_name: movecrm-adminer
    ports:
      - "8082:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_DB: movecrm
    networks:
      - movecrm-network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  movecrm-network:
    driver: bridge
